{"version":3,"file":"static/js/894.0413823a.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Animation/Animation.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","components/ModalFormDialog/MoadalFormDialog.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 30px;\n\n  /* font-size: 20px; */\n  color: #4e4e4e;\n`;\n\nexport const ContactsTitleWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 6px;\n  padding: 0, 20px;\n`;\n\nexport const TitleWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 30px;\n  color: #396fa5;\n  margin-left: 12px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  padding-left: 14px;\n  font-size: 22px;\n  color: #396fa5;\n`;\n\nexport const FindContactsTitle = styled.h3`\n  margin-bottom: 4px;\n  font-size: 18px;\n  font-weight: 100;\n  color: #4e4e4e;\n`;\n","import styled from '@emotion/styled';\n\nexport const ErrMessage = styled.p`\n  display: flex;\n  justify-content: center;\n  width: 300px;\n  margin: 10px 0;\n  font-size: 10px;\n  color: red;\n`;\n\nexport const FormWrap = styled.form`\n  padding: 20px 30px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 6px 10px;\n  font-size: 16px;\n  width: 300px;\n  ::placeholder {\n    color: #c2c2c2;\n  }\n`;\n\nexport const InputName = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 16px;\n`;\n\nexport const SubmitBtn = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { useContacts } from 'hooks';\n// import FormDialog from 'components/ModalFormDialog/MoadalFormDialog';\n\nimport Button from '@mui/material/Button';\n\n// import { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { addContact } from 'redux/contacts/operations';\n\nimport {\n  ErrMessage,\n  FormWrap,\n  FormInput,\n  InputName,\n  SubmitBtn,\n} from 'components/ContactForm/ContactForm.styled';\n\nexport const ContactForm = ({ handleClose }) => {\n  const dispatch = useDispatch();\n  const contactsItems = useContacts();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    formState,\n    reset,\n  } = useForm({\n    defaultValuers: {\n      name: '',\n      number: '',\n    },\n  });\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset();\n    }\n  }, [formState.isSubmitSuccessful, reset]);\n\n  const formSubmitData = data => {\n    const currentName = contactsItems.find(\n      item => item.name.toLowerCase() === data.name.toLowerCase()\n    );\n    if (currentName) return toast.error(`${data.name} is already in contacts`);\n\n    dispatch(addContact(data));\n    handleClose();\n    toast.success(`${data.name} added to your phonebook`);\n  };\n\n  return (\n    <FormWrap onSubmit={handleSubmit(formSubmitData)}>\n      <InputName>Name</InputName>\n      <FormInput\n        autoComplete=\"off\"\n        {...register('name', {\n          required: 'name is a required field',\n          minLength: { value: 3, message: 'min lenght is 3' },\n          pattern: {\n            value: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n            message:\n              'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore dArtagnan.',\n          },\n        })}\n        placeholder=\"Enter Name\"\n      />\n\n      <ErrMessage>{errors.name?.message}</ErrMessage>\n\n      <InputName>Number</InputName>\n      <FormInput\n        autoComplete=\"off\"\n        {...register('number', {\n          required: 'number is a required field',\n          pattern: {\n            value:\n              /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n            message:\n              'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.',\n          },\n        })}\n        placeholder=\"Enter Number\"\n      />\n      <ErrMessage>{errors.number?.message}</ErrMessage>\n\n      {errors.exampleRequired && <p>This field is required</p>}\n\n      <SubmitBtn>\n        <Button\n          // style={{ marginRight: 6 }}\n          type=\"button\"\n          variant=\"text\"\n          onClick={handleClose}\n        >\n          Cancel\n        </Button>\n        <Button type=\"submit\" variant=\"text\">\n          Add Contact\n        </Button>\n      </SubmitBtn>\n    </FormWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 6px 16px;\n  border: 1px solid #e7e7e7;\n  border-radius: 4px;\n\n  margin-bottom: 4px;\n\n  color: #e7e7e7;\n  background-color: #fff;\n\n  /* :nth-of-type(2n) {\n    background-color: #ecf1f4;\n  } */\n`;\n\nexport const ContactItem = styled.div`\n  font-size: 18px;\n  color: #4e4e4e;\n`;\n\nexport const ContactItemName = styled.p`\n  margin-bottom: 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: #396fa5;\n`;\n\nexport const ContactItemPhone = styled.div`\n  display: flex;\n  align-items: center;\n\n  font-size: 16px;\n  color: #8f8f8f;\n`;\n\nexport const ContactItemNumber = styled.p`\n  margin-left: 10px;\n  margin-bottom: 0;\n`;\n\nexport const DeleteContactItem = styled.div`\n  margin-left: 10px;\n  cursor: pointer;\n\n  color: #4e4e4e;\n`;\n","import styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\nimport { tada, fadeInUp } from 'react-animations';\n\nconst tadaAnimation = keyframes`${tada}`;\n\nexport const AnimationTada = styled.div`\n  animation: 1s ${tadaAnimation};\n`;\n\nconst pulseAnimation = keyframes`${fadeInUp}`;\n\nexport const AnimationPulse = styled.div`\n  animation: 1s ${pulseAnimation};\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { toast } from 'react-hot-toast';\nimport { FaPhoneAlt } from 'react-icons/fa';\n\nimport {\n  ListItem,\n  DeleteContactItem,\n  ContactItem,\n  ContactItemName,\n  ContactItemPhone,\n  ContactItemNumber,\n} from 'components/ContactListItem/ContactListItem.styled';\nimport { AnimationPulse } from 'components/Animation/Animation.styled';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const removeContact = id => {\n    dispatch(deleteContact(id));\n    toast.error(`${name} removed from contacts`);\n  };\n\n  return (\n    <AnimationPulse>\n      <ListItem key={id}>\n        <ContactItem>\n          <ContactItemName>{name}</ContactItemName>\n          <ContactItemPhone>\n            <FaPhoneAlt size={12} color={'#c4c4c4'} />\n            <ContactItemNumber>{number}</ContactItemNumber>\n          </ContactItemPhone>\n        </ContactItem>\n\n        <DeleteContactItem onClick={() => removeContact(id)}>\n          <MdDeleteForever size={26} color={'lightCoral'} />\n        </DeleteContactItem>\n      </ListItem>\n    </AnimationPulse>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-bottom: 80px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nimport { Container } from 'components/ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Container>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterInputWrap = styled.label`\n  width: 100%;\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  height: 34px;\n  margin-bottom: 25px;\n  padding: 10px;\n  border: 1px solid #e7e7e7;\n  border-radius: 4px;\n  ::placeholder {\n    color: #c2c2c2;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { useFilter } from 'hooks';\n\nimport { FilterInput, FilterInputWrap } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useFilter();\n  return (\n    <FilterInputWrap>\n      <FilterInput\n        name=\"filter\"\n        type=\"text\"\n        value={filterValue}\n        placeholder=\"Find contacts by name ...\"\n        onChange={filterInputValue =>\n          dispatch(setFilter(filterInputValue.currentTarget.value))\n        }\n      />\n    </FilterInputWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SpinnerWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 999;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\n\nimport { SpinnerWrap } from 'components/Spinner/Spinner.styled';\n\nexport const Spinner = () => {\n  return (\n    <SpinnerWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"4\"\n        animationDuration=\"0.75\"\n        width=\"60\"\n        visible={true}\n      />\n    </SpinnerWrap>\n  );\n};\n","import * as React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\n\nexport default function FormDialog({ isOpen, onClose, children }) {\n  return (\n    <Dialog open={isOpen} onClose={onClose}>\n      <DialogContent>{children}</DialogContent>\n    </Dialog>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Toaster, toast } from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport { AiOutlinePlus } from 'react-icons/ai';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useContacts, useLoading, useError } from 'hooks';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nimport FormDialog from 'components/ModalFormDialog/MoadalFormDialog';\n\nimport {\n  Container,\n  ContactsTitleWrap,\n  ContactsTitle,\n} from 'components/App.styled';\n\nexport default function Contacts() {\n  const [open, setOpen] = useState(false);\n\n  const contactsItems = useContacts();\n  const isLoading = useLoading();\n  const error = useError();\n\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error === 'ERR_BAD_REQUEST') {\n      toast.error('Something went wrong, try again later');\n      return;\n    }\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <Container style={{ display: 'block' }}>\n      {isLoading && <Spinner />}\n\n      <div>\n        <ContactsTitleWrap>\n          <ContactsTitle>Contacts</ContactsTitle>\n          <Button\n            style={{ height: '30px' }}\n            variant=\"outlined\"\n            onClick={handleClickOpen}\n          >\n            <AiOutlinePlus\n              size={14}\n              color={'#0d6efd'}\n              style={{ marginRight: '10px' }}\n            />\n            Add Contact\n          </Button>\n          <FormDialog isOpen={open} onClose={handleClose}>\n            <ContactForm handleClose={handleClose} />\n          </FormDialog>\n        </ContactsTitleWrap>\n\n        <Filter />\n        {contactsItems.length ? <ContactList /> : <p>No any contacts</p>}\n      </div>\n      <Toaster />\n    </Container>\n  );\n}\n"],"names":["Container","styled","ContactsTitleWrap","TitleWrap","Title","ContactsTitle","ErrMessage","FormWrap","FormInput","InputName","SubmitBtn","ContactForm","handleClose","dispatch","useDispatch","contactsItems","useContacts","useForm","defaultValuers","name","number","register","handleSubmit","errors","formState","reset","useEffect","isSubmitSuccessful","onSubmit","data","find","item","toLowerCase","toast","addContact","autoComplete","required","minLength","value","message","pattern","placeholder","exampleRequired","Button","type","variant","onClick","ListItem","ContactItem","ContactItemName","ContactItemPhone","ContactItemNumber","DeleteContactItem","tadaAnimation","keyframes","tada","pulseAnimation","fadeInUp","AnimationPulse","ContactListItem","id","size","color","deleteContact","removeContact","ContactList","filteredContacts","useSelector","selectFilteredContacts","map","FilterInputWrap","FilterInput","Filter","filterValue","useFilter","onChange","filterInputValue","setFilter","currentTarget","SpinnerWrap","Spinner","strokeColor","strokeWidth","animationDuration","width","visible","FormDialog","isOpen","onClose","children","Dialog","open","DialogContent","Contacts","useState","setOpen","isLoading","useLoading","error","useError","fetchContacts","style","display","height","marginRight","length"],"sourceRoot":""}